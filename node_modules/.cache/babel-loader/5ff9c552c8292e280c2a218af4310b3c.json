{"ast":null,"code":"var _jsxFileName = \"/Users/jak/Desktop/Codes/MERN/ShoppingCart/frontend/src/components/modalContiners/forms/productCard.js\";\nimport React from 'react';\nimport noImage from '../../../Images/noImage.png';\nimport ReactDOM from 'react-dom';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nimport { Carousel } from 'react-responsive-carousel'; //import { Footer } from 'react-image-carousel/lib/Footer';\n\nimport { add, getCart } from '../../../slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction createImageContainer(images) {\n  return images.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: noImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })));\n}\n\nfunction cartCheck(cart, product) {\n  let isItemInCart = false;\n  cart.forEach(element => {\n    if (element.item._id === product._id) {\n      isItemInCart = true;\n    } else {\n      return isItemInCart = false;\n    }\n  });\n  return isItemInCart;\n}\n\nexport const ProductCard = ({\n  onSubmit,\n  product\n}) => {\n  const cartList = useSelector(getCart);\n  const dispatch = useDispatch();\n  let isItemInCart = cartCheck(cartList, product);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageCarousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, createImageContainer(product.product_images))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"productInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, product.product_description), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"productPrice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, product.product_price))), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: \"150px\",\n      borderRadius: \"3px\",\n      letterSpacing: \"1.5px\",\n      marginTop: \"1rem\",\n      backgroundColor: '#306bc9',\n      border: 'none',\n      color: 'white',\n      padding: '10px 22px',\n      textAlign: 'center',\n      textDecoration: 'none',\n      display: 'inline-block',\n      fontSize: '18px'\n    } // onClick={() => addItemToCart(product,dispatch,cartList)}\n    ,\n    onClick: () => {\n      console.log(isItemInCart);\n\n      if (cartCheck(cartList, product) === false) {\n        dispatch(add({\n          item: product,\n          quantity: 1\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \"Add to Cart\"));\n};\nexport default ProductCard;","map":{"version":3,"sources":["/Users/jak/Desktop/Codes/MERN/ShoppingCart/frontend/src/components/modalContiners/forms/productCard.js"],"names":["React","noImage","ReactDOM","Carousel","add","getCart","useDispatch","useSelector","createImageContainer","images","map","image","index","cartCheck","cart","product","isItemInCart","forEach","element","item","_id","ProductCard","onSubmit","cartList","dispatch","product_images","product_name","product_description","product_price","width","borderRadius","letterSpacing","marginTop","backgroundColor","border","color","padding","textAlign","textDecoration","display","fontSize","console","log","quantity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport noImage from '../../../Images/noImage.png';\n\nimport ReactDOM from 'react-dom';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\n//import { Footer } from 'react-image-carousel/lib/Footer';\n\nimport { add, getCart } from '../../../slices/cartSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction createImageContainer(images)\n{\n  return(\n      images.map((image,index) => (\n        <div key={index}>\n          <img src={image} alt={noImage} />\n        </div>\n      ))\n      )\n}\n\nfunction cartCheck(cart, product)\n{\n  let isItemInCart=false;\n  cart.forEach(element => {\n    if(element.item._id===product._id)\n    {\n      isItemInCart=true\n    }\n    else{\n      return isItemInCart = false;\n    }\n  });\n  return isItemInCart;\n}\nexport const ProductCard = ({ \n  onSubmit,\n  product\n }) => {\n  const cartList = useSelector(getCart);\n  const dispatch = useDispatch();\n  let isItemInCart = cartCheck(cartList,product);\n  return (\n    <div>\n    <form onSubmit={onSubmit}>\n      <div className=\"imageCarousel\">\n        <Carousel>\n          {createImageContainer(product.product_images)}\n        </Carousel>\n      </div>\n      <div className=\"productInfo\">\n        <h1 className =\"productName\">{product.product_name}</h1>\n        <p className = \"productInfo\">{product.product_description}</p>\n        <p className = \"productPrice\">{product.product_price}</p>\n\n      </div>\n      \n    </form>\n    <button\n        style={{\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\",\n          backgroundColor: '#306bc9',\n          border: 'none',\n          color: 'white',\n          padding: '10px 22px',\n          textAlign: 'center',\n          textDecoration: 'none',\n          display: 'inline-block',\n          fontSize: '18px',\n        }}\n        // onClick={() => addItemToCart(product,dispatch,cartList)}\n        onClick={() => {\n\n          console.log(isItemInCart);\n          if(cartCheck(cartList,product)===false)\n          {\n            dispatch(add({item:product,quantity:1}))\n\n          }\n        }}\n        \n      >Add to Cart</button>\n    </div>\n  );\n};\nexport default ProductCard;"]},"metadata":{},"sourceType":"module"}