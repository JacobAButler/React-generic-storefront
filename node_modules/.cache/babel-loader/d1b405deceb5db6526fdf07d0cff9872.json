{"ast":null,"code":"var _jsxFileName = \"/Users/jak/Desktop/Codes/React/ECommFront/frontend/src/components/modalContiners/container.js\";\nimport React, { Component } from 'react';\nimport { Modal } from './modal';\nimport Trigger from './triggers/triggerIndex';\nexport class Container extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isShown: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        isShown: true\n      }, () => {\n        this.closeButton.focus();\n      });\n      this.toggleScrollLock();\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isShown: false\n      });\n      this.TriggerButton.focus();\n      this.toggleScrollLock();\n    };\n\n    this.onKeyDown = event => {\n      if (event.keyCode === 27) {\n        this.closeModal();\n      }\n    };\n\n    this.onClickOutside = event => {\n      if (this.modal && this.modal.contains(event.target)) return;\n      this.closeModal();\n    };\n\n    this.toggleScrollLock = () => {\n      document.querySelector('html').classList.toggle('scroll-lock');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Trigger, {\n      showModal: this.showModal,\n      buttonRef: n => this.TriggerButton = n,\n      triggerText: this.props.triggerText,\n      triggerType: this.props.triggerType,\n      triggerImage: this.props.triggerImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), this.state.isShown ? /*#__PURE__*/React.createElement(Modal, {\n      onSubmit: this.props.onSubmit,\n      modalRef: n => this.modal = n,\n      buttonRef: n => this.closeButton = n,\n      closeModal: this.closeModal,\n      onKeyDown: this.onKeyDown,\n      onClickOutside: this.onClickOutside,\n      formType: this.props.formType,\n      info: this.props.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\nexport default Container;","map":{"version":3,"sources":["/Users/jak/Desktop/Codes/React/ECommFront/frontend/src/components/modalContiners/container.js"],"names":["React","Component","Modal","Trigger","Container","state","isShown","showModal","setState","closeButton","focus","toggleScrollLock","closeModal","TriggerButton","onKeyDown","event","keyCode","onClickOutside","modal","contains","target","document","querySelector","classList","toggle","render","n","props","triggerText","triggerType","triggerImage","onSubmit","formType","info"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAIA,OAAO,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCI,KADuC,GAC/B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD+B;;AAAA,SAEvCC,SAFuC,GAE3B,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAiC,MAAM;AACrC,aAAKG,WAAL,CAAiBC,KAAjB;AACD,OAFD;AAGA,WAAKC,gBAAL;AACD,KAPsC;;AAAA,SAQvCC,UARuC,GAQ1B,MAAM;AACjB,WAAKJ,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKO,aAAL,CAAmBH,KAAnB;AACA,WAAKC,gBAAL;AACD,KAZsC;;AAAA,SAavCG,SAbuC,GAa1BC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKJ,UAAL;AACD;AACF,KAjBsC;;AAAA,SAkBvCK,cAlBuC,GAkBrBF,KAAD,IAAW;AAC1B,UAAI,KAAKG,KAAL,IAAc,KAAKA,KAAL,CAAWC,QAAX,CAAoBJ,KAAK,CAACK,MAA1B,CAAlB,EAAqD;AACrD,WAAKR,UAAL;AACD,KArBsC;;AAAA,SAuBvCD,gBAvBuC,GAuBpB,MAAM;AACvBU,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,SAA/B,CAAyCC,MAAzC,CAAgD,aAAhD;AACD,KAzBsC;AAAA;;AA0BvCC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE,KAAKlB,SADlB;AAEE,MAAA,SAAS,EAAGmB,CAAD,IAAQ,KAAKb,aAAL,GAAqBa,CAF1C;AAGE,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,WAH1B;AAIE,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAJ1B;AAKE,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,YAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQG,KAAKzB,KAAL,CAAWC,OAAX,gBACC,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAKqB,KAAL,CAAWI,QADvB;AAEE,MAAA,QAAQ,EAAGL,CAAD,IAAQ,KAAKR,KAAL,GAAaQ,CAFjC;AAGE,MAAA,SAAS,EAAGA,CAAD,IAAQ,KAAKjB,WAAL,GAAmBiB,CAHxC;AAIE,MAAA,UAAU,EAAE,KAAKd,UAJnB;AAKE,MAAA,SAAS,EAAE,KAAKE,SALlB;AAME,MAAA,cAAc,EAAE,KAAKG,cANvB;AAOE,MAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWK,QAPvB;AAQE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAYG,IApBN,CADF;AAyBD;;AApDsC;AAuDzC,eAAe7B,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Modal } from './modal';\nimport Trigger from './triggers/triggerIndex';\n\n\n\nexport class Container extends Component {\n  state = { isShown: false };\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = (event) => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = (event) => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Trigger\n          showModal={this.showModal}\n          buttonRef={(n) => (this.TriggerButton = n)}\n          triggerText={this.props.triggerText}\n          triggerType={this.props.triggerType}\n          triggerImage={this.props.triggerImage}\n        />\n        {this.state.isShown ? (\n          <Modal\n            onSubmit={this.props.onSubmit}\n            modalRef={(n) => (this.modal = n)}\n            buttonRef={(n) => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            formType={this.props.formType}\n            info={this.props.info}\n\n          />\n        ) : null}\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}